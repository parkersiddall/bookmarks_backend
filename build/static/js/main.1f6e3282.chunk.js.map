{"version":3,"sources":["styles/App.js","services/bookmarksService.js","reducers/categorizationReducer.js","reducers/favoritesReducer.js","reducers/bookmarksReducer.js","services/userService.js","reducers/userReducer.js","reducers/addBookmarkReducer.js","components/AddBookmarkDialogue.js","reducers/categoryReducer.js","reducers/confirmDeleteReducer.js","reducers/editBookmarkReducer.js","components/FavoriteButton.js","components/BookmarkCard.js","components/ConfirmDeleteDialogue.js","components/EditBookmarkDialogue.js","components/Bookmarks.js","styles/Favorites.js","components/Favorites.js","styles/LeftDrawer.js","reducers/drawerReducer.js","reducers/settingsReducer.js","reducers/savedPhotosReducer.js","components/SavedPhotoCard.js","components/SavedPhotosDialogue.js","utils/subredditChecker.js","components/SettingsDialogue.js","components/LeftDrawer.js","styles/Navbar.js","reducers/searchReducer.js","components/Navbar.js","components/SearchResults.js","components/Authenticated.js","services/login.js","components/Login.js","App.js","store.js","index.js"],"names":["useStyles","makeStyles","theme","topMarginForNavbar","marginTop","content","flexGrow","padding","spacing","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","contentShift","easeOut","enteringScreen","baseUrl","token","getUsersBookmarks","config","headers","Authorization","axios","get","then","response","data","setToken","newToken","modifyBookmark","id","modification","a","put","request","addBookmark","newBookmark","post","deleteBookmark","delete","initializeCategorization","bookmarks","dispatch","categories","Set","forEach","bookmark","add","category","Array","from","type","categorization","state","action","initializeFavorites","favorites","favoritesReducer","concat","filter","fav","_id","initializeBookmarks","bookmarksService","isFavorite","push","user","addedBookmark","window","alert","editBookmark","redditPost","console","log","bookmarksReducer","sort","b","name","toLowerCase","filtered","getUserData","editSettings","newSettings","toggleSavePhoto","photo","initializeUser","loggedUserJSON","localStorage","getItem","JSON","parse","userService","userData","updateUserSettings","updatedSettings","addOrRemoveSavedPhoto","updatedUser","userReducer","openAddBookmark","closeAddBookmark","addBookmarkReducer","AddBookmarkDialogue","useDispatch","openStatus","useSelector","addBookmarkDialogueStatus","useState","setName","url","setUrl","setCategory","notes","setNotes","handleSubmit","event","preventDefault","Dialog","open","onClose","aria-labelledby","DialogTitle","onSubmit","DialogContent","TextField","label","margin","variant","autoFocus","required","fullWidth","onChange","target","value","Autocomplete","options","map","freeSolo","innerHTML","renderInput","params","rows","multiline","DialogActions","Button","onClick","color","categoryReducer","initialState","closeConfirmDelete","confirmDeleteReducer","closeEditBookmark","editBookmarkReducer","updatedState","FavoriteButton","includes","Tooltip","title","IconButton","aria-label","favorite","removedFavorite","fontSize","addedFavorite","expand","transform","shortest","expandOpen","BookmarkCard","classes","expanded","setExpanded","React","anchorEl","setAnchorEl","handleSave","error","Card","className","CardActionArea","component","href","CardMedia","style","height","image","CardContent","Typography","gutterBottom","Link","underline","Collapse","in","timeout","unmountOnExit","CardActions","disableSpacing","clsx","currentTarget","Menu","keepMounted","Boolean","MenuItem","openEditBookmark","openConfirmDelete","Divider","undefined","savedPhotos","ConfirmDeleteDialogue","confirmDelete","handleDelete","DialogContentText","EditBookmarkDialogue","editBookmarkDialogue","adjustedBookmark","document","getElementById","defaultValue","customCard","borderLeft","categoryIcon","fab","position","bottom","right","emptyText","textAlign","Bookmarks","store","length","Fab","size","Container","adjustedMargins","Box","m","Grid","container","item","xs","sm","md","adjustedMarginBottom","marginBottom","Favorites","drawer","width","flexShrink","drawerPaper","drawerHeader","display","alignItems","mixins","toolbar","justifyContent","changeDrawerStatus","status","drawerReducer","toggleSettingsMenu","settingsReducer","toggleSavedPhotos","savedPhotosReducer","SavedPhotoCard","savedPhoto","SavedBookmarksDialogue","savedPhotosDialogueStatus","require","checkSubreddit","subreddit","successful","successRate","children","post_hint","SettingsDialogue","settings","prefersDark","setTheme","subredditApproved","username","InputProps","startAdornment","InputAdornment","FormControl","InputLabel","Select","labelId","LeftDrawer","drawerOpen","categoriesAlphaOrdered","Drawer","anchor","paper","edge","menuButton","hide","List","ListItem","button","ListItemIcon","ListItemText","primary","updated","clearFavorites","removeItem","root","customNavBar","background","appBar","appBarShift","marginRight","search","borderRadius","shape","backgroundColor","fade","palette","common","white","breakpoints","up","searchIcon","pointerEvents","inputRoot","inputInput","paddingLeft","searchReducer","Navbar","AppBar","Toolbar","navBarTitle","InputBase","placeholder","input","inputProps","SearchResults","searchTerm","Authenticated","useEffect","darkSetting","useMemo","createMuiTheme","ThemeProvider","CssBaseline","login","credentials","register","newUser","prettyBackground","randomElement","Math","floor","random","pageRightContainer","pageLeftContainer","backgroundPosition","backgroundSize","Login","setUsername","password","setPassword","registerUsername","setRegisterUsername","registerPassword","setRegisterPassword","registerConfirmPassword","setRegisterConfirmPassword","loginDisplay","setLoginDisplay","registerDisplay","setRegisterDisplay","toggleForms","handleLogin","loginService","setItem","stringify","handleRegister","postedNewUser","my","mt","mb","App","reducer","combineReducers","categorizationReducer","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render"],"mappings":"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","file":"static/js/main.1f6e3282.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles'\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme) => ({\n  topMarginForNavbar: {\n    marginTop: '64px'\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: 0,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: drawerWidth,\n  }\n}))\n\nexport default useStyles","import axios from 'axios'\n\nconst baseUrl = '/api/bookmarks'\n\nlet token = null\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getUsersBookmarks = () => {\n  const config = {\n    headers: { Authorization: token},\n  }\n  const request = axios.get(baseUrl, config)\n  return request.then(response => response.data)\n}\n\nconst modifyBookmark = async (id, modification) => {\n  const config = {\n    headers: { Authorization: token},\n  }\n\n  const request = await axios.put(baseUrl + `/${id}`, modification, config)\n  return request.data\n}\n\nconst addBookmark = async newBookmark => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const request = await axios.post(baseUrl, newBookmark, config)\n  return request.data\n}\n\nconst deleteBookmark = async id => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const request = await axios.delete(baseUrl + `/${id}` , config)\n  return request.data\n}\n\nexport default { \n  getUsersBookmarks, \n  setToken, \n  modifyBookmark, \n  addBookmark, \n  deleteBookmark\n}","// this reducer manages the processes of creating/saving a list of unique categories from the bookmark list\n\nexport const initializeCategorization = (bookmarks) => {\n  return async dispatch => {\n    // create a set to prevent duplicate values\n    let categories = new Set()\n\n    // pull out categories from bookmarks, place them in set\n      bookmarks.forEach(bookmark => {\n      categories.add(bookmark.category)\n    })\n\n    // turn set to an array\n    categories = Array.from(categories)\n\n    dispatch({\n      type: 'INIT_CATEGORIZATION',\n      data: categories\n    })\n  }\n}\n\nconst categorization = (state = [], action) => {\n  switch (action.type) { \n\n  case 'INIT_CATEGORIZATION':\n    return action.data\n\n  default:\n    return state\n  }\n}\n\nexport default categorization","import bookmarksService from '../services/bookmarksService'\n\nexport const initializeFavorites = (favorites) => {\n  return async dispatch => {\n    dispatch({\n      type: 'INIT_FAVORITES',\n      data: favorites\n    })\n    \n  }\n}\n\nexport const clearFavorites = (favorites) => {\n\n  // service calls to remove all favorites\n  const clearedFavs = favorites.map(async fav => {\n\n    let modification = {\n      isFavorite: false\n    }\n    \n    const updated = await bookmarksService.modifyBookmark(fav._id, modification)\n    \n    return updated\n  })\n\n  return async dispatch => {\n    dispatch({\n      type: 'CLEAR_FAVORITES',\n      data: null\n    })\n  }\n}\n\nexport const addFavorite = (favorite) => {\n  return async dispatch => {\n\n    const modification = {\n      isFavorite: true\n    }\n\n    const addedFavorite = await bookmarksService.modifyBookmark(favorite._id, modification)\n\n    // factor back in the reddit data that is not processed by the API endpoint\n    addedFavorite.redditPost = favorite.redditPost\n\n    dispatch({\n      type: 'ADD_FAVORITE',\n      data: addedFavorite\n    })\n  }\n}\n\nexport const removeFavorite = (favorite) => {\n  return async dispatch => {\n\n    const modification = {\n      isFavorite: false\n    }\n\n    const removedFavorite = await bookmarksService.modifyBookmark(favorite._id, modification)\n\n    // factor back in the reddit data that is not processed by the API endpoint\n    removedFavorite.redditPost = favorite.redditPost\n\n    dispatch({\n      type: 'REMOVE_FAVORITE',\n      data: removedFavorite\n    })\n  }\n}\n\nconst favoritesReducer = (state = [], action) => {\n  switch (action.type) { \n    \n  case 'INIT_FAVORITES':\n    return action.data\n\n  case 'ADD_FAVORITE':\n    return state.concat(action.data)\n\n  case 'REMOVE_FAVORITE':\n    return state.filter(fav => fav._id !== action.data._id)\n\n  case 'CLEAR_FAVORITES':\n    return []\n\n  default:\n    return state\n  }\n}\n\nexport default favoritesReducer","import bookmarksService from '../services/bookmarksService'\nimport { initializeCategorization } from './categorizationReducer'\nimport { initializeFavorites } from './favoritesReducer'\n\nexport const initializeBookmarks = () => {\n  return async dispatch => {\n    // intialize bookmarks and save to redux\n    const bookmarks = await bookmarksService.getUsersBookmarks()\n    dispatch({\n      type: 'INIT_BOOKMARKS',\n      data: bookmarks\n    })\n\n    // initialize categories\n    dispatch(initializeCategorization(bookmarks))\n\n    // initialize favorites\n    let favorites = []\n    bookmarks.forEach(bookmark => {\n      if (bookmark.isFavorite) {\n        favorites.push(bookmark)\n      }\n    })\n    dispatch(initializeFavorites(favorites))\n\n  }\n}\n\nexport const addBookmark = (newBookmark, user) => {\n  return async dispatch => {\n    try {\n      let addedBookmark = await bookmarksService.addBookmark(newBookmark)\n\n      dispatch({\n        type: 'ADD_BOOKMARK',\n        data: addedBookmark,\n      })\n    } catch (error) {\n      window.alert('Error: ', error)\n        // load a notification\n    }\n\n    // add category to left drawer\n    const bookmarks = await bookmarksService.getUsersBookmarks()\n    dispatch(initializeCategorization(bookmarks))\n  }\n}\n\nexport const deleteBookmark = (bookmark) => {\n  return async dispatch => {\n    try {\n      await bookmarksService.deleteBookmark(bookmark._id)\n\n      dispatch({\n        type: 'DELETE_BOOKMARK',\n        data: bookmark._id,\n      })\n    } catch (error) {\n      window.alert('Error: ', error)\n        // load a notification\n    }\n\n    // add category to left drawer\n    const bookmarks = await bookmarksService.getUsersBookmarks()\n    dispatch(initializeCategorization(bookmarks))\n  }\n}\n\nexport const editBookmark = (redditPost, id, modification) => {\n  return async dispatch => {\n    try {\n      // send modifications to backend\n      const response = await bookmarksService.modifyBookmark(id, modification)\n\n      // add in the existing reddit post\n      response.redditPost = redditPost\n\n      dispatch({\n        type: 'EDIT_BOOKMARK',\n        data: response,\n      })\n\n      // update left drawer categories\n      const bookmarks = await bookmarksService.getUsersBookmarks()\n      dispatch(initializeCategorization(bookmarks))\n\n      // re-initialize favorites\n      let favorites = []\n      bookmarks.forEach(bookmark => {\n        if (bookmark.isFavorite) {\n          favorites.push(bookmark)\n        }\n      })\n      dispatch(initializeFavorites(favorites))\n\n    } catch (error) {\n      console.log(error)\n      window.alert('Error: ', error)\n        // load a notification\n    }\n  }\n}\n\n\n\nconst bookmarksReducer = (state = [], action) => {\n    switch (action.type) {  \n    \n    case 'INIT_BOOKMARKS':\n      return action.data.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1)\n\n    case 'ADD_BOOKMARK':\n      return state.concat(action.data)\n\n    case 'DELETE_BOOKMARK':\n      return state.filter(bookmark => bookmark._id !== action.data)\n\n    case 'EDIT_BOOKMARK':\n      // TODO: see if it is possible to index into the same position. It currently throws the modification to the end. \n      const filtered = state.filter(bookmark => bookmark._id !== action.data._id)\n\n      return filtered.concat(action.data)\n      \n    default:\n      return state\n    }\n  }\n  \nexport default bookmarksReducer","import axios from 'axios'\n\nconst baseUrl = '/api/users'\n\nlet token = null\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getUserData = () => {\n  const config = {\n    headers: { Authorization: token},\n  }\n  const request = axios.get(baseUrl + '/me', config)\n  return request.then(response => response.data)\n}\nconst editSettings = async (newSettings) => {\n  const config = {\n    headers: { Authorization: token},\n  }\n  \n  const request = await axios.put(baseUrl + '/settings', newSettings, config)\n  return request.data\n}\n\nconst toggleSavePhoto = async (photo) => {\n  const config = {\n    headers: { Authorization: token},\n  }\n  \n  const request = await axios.put(baseUrl + '/savedPhotos', photo, config)\n  return request.data\n}\n\n/* \nconst addBookmark = async newBookmark => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const request = await axios.post(baseUrl, newBookmark, config)\n  return request.data\n}\n\nconst deleteBookmark = async id => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const request = await axios.delete(baseUrl + `/${id}` , config)\n  return request.data\n} */\n\nexport default { \n  getUserData, \n  setToken, \n  editSettings,\n  toggleSavePhoto\n\n}","import bookmarksService from '../services/bookmarksService'\nimport userService from '../services/userService'\n\nexport const initializeUser = () => {\n  return async dispatch => {\n\n    const loggedUserJSON = window.localStorage.getItem('loggedBookmarksUser')\n    \n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n\n      // update token variable in bookmarks service\n      bookmarksService.setToken(user.token)\n      userService.setToken(user.token)\n\n      // collect data about user\n      const userData = await userService.getUserData(user.token)\n      \n      dispatch({\n        type: 'SET_USER',\n        data: userData\n      })\n\n    }\n  }\n}\n\nexport const updateUserSettings = (newSettings) => {\n  return async dispatch => {\n    const updatedSettings = await userService.editSettings(newSettings)\n    \n    dispatch({\n      type: 'SET_USER',\n      data: updatedSettings\n    })\n  }\n}\n\nexport const addOrRemoveSavedPhoto = (photo) => {\n  return async dispatch => {\n    const updatedUser = await userService.toggleSavePhoto(photo)\n    \n    dispatch({\n      type: 'SET_USER',\n      data: updatedUser\n    })\n  }\n}\n\nconst userReducer = (state = null, action) => {\n  switch (action.type) {\n  case 'SET_USER':\n    return action.data\n\n  default:\n    return state\n  }\n}\n\nexport default userReducer","// reducer that manages the status of the dialogue modal with\n// the form to add a bookmark\nexport const openAddBookmark = () => {\n  return async dispatch => {\n    dispatch({\n      type: \"SWITCH_ADD_BOOKMARK_STATUS\",\n      data: true\n    })\n  }\n}\n\nexport const closeAddBookmark = () => {\n  return async dispatch => {\n    dispatch({\n      type: \"SWITCH_ADD_BOOKMARK_STATUS\",\n      data: false\n    })\n  }\n}\n\nconst addBookmarkReducer = (state = false, action) => {\n    switch (action.type) {  \n\n      case \"SWITCH_ADD_BOOKMARK_STATUS\":\n        return action.data\n\n      default:\n        return state\n    }\n  }\n  \nexport default addBookmarkReducer","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\n// reducers\nimport { closeAddBookmark } from '../reducers/addBookmarkReducer'\nimport { addBookmark } from '../reducers/bookmarksReducer'\n\n// components\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\n\nconst AddBookmarkDialogue = () => {\n  const dispatch = useDispatch()\n\n  // get state from redux\n  const openStatus = useSelector(state => state.addBookmarkDialogueStatus)\n  const categorization = useSelector(state => state.categorization)\n\n  // local states to manage form fields\n  const [name, setName] = useState('')\n  const [url, setUrl] = useState('')\n  const [category, setCategory] = useState('')\n  const [notes, setNotes] = useState('')\n\n  const newBookmark = {\n    name,\n    url,\n    category,\n    notes\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n    //console.log(newBookmark)\n    dispatch(addBookmark(newBookmark))\n    dispatch(closeAddBookmark())\n  }\n\n  return (\n    <div>\n      <Dialog open={openStatus} onClose={() => dispatch(closeAddBookmark())} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">New Bookmark</DialogTitle>\n          <form onSubmit={handleSubmit}>\n            <DialogContent>\n              <TextField\n                id=\"name\"\n                label=\"Name\"\n                type=\"text\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoFocus\n                required\n                fullWidth\n                onChange={(event) => setName(event.target.value)}\n              />\n              <TextField\n                id=\"url\"\n                label=\"URL\"\n                type=\"url\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                onChange={(event) => setUrl(event.target.value)}\n              />\n              <Autocomplete\n                  id=\"category\"\n                  options={categorization.map(category => category)}\n                  freeSolo\n                  onChange={(event) => setCategory(event.target.innerHTML)}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      label=\"Category\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      required\n                      onChange={(event) => setCategory(event.target.value)}\n                    />\n                  )}\n                />\n                <TextField\n                  id=\"notes\"\n                  label=\"Notes\"\n                  type=\"text\"\n                  rows={5}\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  fullWidth\n                  multiline\n                  onChange={(event) => setNotes(event.target.value)}\n                />\n            </DialogContent>\n            <DialogActions>\n              <Button\n                onClick={() => dispatch(closeAddBookmark())} \n              >\n                Cancel\n              </Button>\n              <Button id=\"save_added_bookmark\" type=\"submit\" color=\"primary\">\n                Save\n              </Button>\n            </DialogActions>\n          </form>\n      </Dialog>\n    </div>\n  )\n}\n\nexport default AddBookmarkDialogue","// this reducer manages the selected category, causing the app to filter and show only bookmarks in this category\n\nexport const setCategory = (category) => {\n  return async dispatch => {\n    dispatch({\n      type: 'SET_CATEGORY',\n      data: category\n    })\n  }\n}\n\nconst categoryReducer = (state = 'All', action) => {\n  switch (action.type) { \n\n  case 'SET_CATEGORY':\n    return action.data\n\n  default:\n    return state\n  }\n}\n\nexport default categoryReducer","// reducer that manages the status of the dialogue modal with\n// the confirmation to delete a bookmark\n\nconst initialState = {\n  openStatus: false,\n  bookmark: {\n    name: 'x'\n  }\n}\n\n\nexport const openConfirmDelete = (bookmark) => {\n  return async dispatch => {\n    dispatch({\n      type: \"SWITCH_CONFIRM_DELETE_STATUS\",\n      data: {\n        openStatus: true,\n        bookmark: bookmark\n      }\n    })\n  }\n}\n\nexport const closeConfirmDelete = () => {\n  return async dispatch => {\n    dispatch({\n      type: \"SWITCH_CONFIRM_DELETE_STATUS\",\n      data: initialState\n    })\n  }\n}\n\nconst confirmDeleteReducer = (state = initialState, action) => {\n    switch (action.type) {  \n\n      case \"SWITCH_CONFIRM_DELETE_STATUS\":\n        return action.data\n\n      default:\n        return state\n    }\n  }\n  \nexport default confirmDeleteReducer","// reducer that manages the status of the dialogue modal with\n// the edit bookmark form\n\nconst initialState = {\n  openStatus: false,\n  bookmark: {\n    name: 'x',\n    url:'x',\n    category: 'x',\n    notes: 'x'\n  }\n}\n\n\nexport const openEditBookmark = (bookmark) => {\n  return async dispatch => {\n    dispatch({\n      type: \"SWITCH_EDIT_BOOKMARK_STATUS\",\n      data: {\n        openStatus: true,\n        bookmark: bookmark\n      }\n    })\n  }\n}\n\nexport const closeEditBookmark = () => {\n  return async dispatch => {\n    dispatch({\n      type: \"CLOSE_EDIT_BOOKMARK_STATUS\",\n      data: initialState\n    })\n  }\n}\n\nconst editBookmarkReducer = (state = initialState, action) => {\n    switch (action.type) {  \n\n      case \"SWITCH_EDIT_BOOKMARK_STATUS\":\n        return action.data\n\n      case \"CLOSE_EDIT_BOOKMARK_STATUS\":\n        const updatedState = {\n          openStatus: false,\n          bookmark: state.bookmark\n        }\n\n        return updatedState\n  \n\n      default:\n        return state\n    }\n  }\n  \nexport default editBookmarkReducer","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\n// reducers\nimport { addFavorite, removeFavorite } from '../reducers/favoritesReducer'\n\n// components\nimport IconButton from '@material-ui/core/IconButton'\nimport StarIcon from '@material-ui/icons/Star'\nimport StarBorderIcon from '@material-ui/icons/StarBorder'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nconst FavoriteButton = ({ bookmark }) => {\n\n  const dispatch = useDispatch()\n  const favorites =  useSelector(state => state.favorites)\n  let favUrls = favorites.map((fav) => fav._id)\n\n  // actions\n  const handleAddFavorite = () => {\n    dispatch(addFavorite(bookmark))\n  }\n\n  const handleRemoveFavorite = () => {\n    dispatch(removeFavorite(bookmark))\n  }\n\n  if(favUrls.includes(bookmark._id)){\n    return (\n      <div>\n        <Tooltip title=\"Unpin\">\n          <IconButton\n            aria-label=\"remove favorite\"\n            onClick={handleRemoveFavorite}\n          >\n            <StarIcon \n              color='primary'\n              fontSize='small'\n            />\n          </IconButton>\n        </Tooltip>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <Tooltip title=\"Pin to top\">\n        <IconButton \n          aria-label=\"add favorite\"\n          onClick={handleAddFavorite}\n        >\n          <StarBorderIcon\n            fontSize='small'\n          />\n        </IconButton>\n      </Tooltip>\n    </div>\n  )\n}\n\nexport default FavoriteButton","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\n\n// reducers\nimport { setCategory } from '../reducers/categoryReducer'\nimport { openConfirmDelete } from '../reducers/confirmDeleteReducer'\nimport { openEditBookmark } from '../reducers/editBookmarkReducer'\nimport { addOrRemoveSavedPhoto } from '../reducers/userReducer'\n\n// components\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Collapse from '@material-ui/core/Collapse'\nimport Divider from '@material-ui/core/Divider'\nimport FavoriteButton from './FavoriteButton'\nimport IconButton from '@material-ui/core/IconButton'\nimport InfoIcon from '@material-ui/icons/Info'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown'\nimport Link from '@material-ui/core/Link'\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Typography from '@material-ui/core/Typography'\n\nconst useStyles = makeStyles((theme) => ({\n    expand: {\n      transform: 'rotate(0deg)',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)',\n    }\n  }))\n\nconst BookmarkCard = ({ bookmark }) => {\n\n    const classes = useStyles()\n    const dispatch = useDispatch()\n\n    // pull from redux\n    const user = useSelector(state => state.user)\n\n    // local state to manage collapse and menu\n    const [expanded, setExpanded] = useState(false)\n    const [anchorEl, setAnchorEl] = React.useState(null)\n\n    // handlers for collapse and menu\n    const handleExpandClick = () => {\n      setExpanded(!expanded);\n    };\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    // handle save/unsave photo\n    const handleSave = async () => {\n        const photo = {\n            url: bookmark.redditPost.url,\n            name: bookmark.redditPost.title\n        }\n\n        try {\n            dispatch(addOrRemoveSavedPhoto(photo))\n         \n        } catch (error){\n            console.log(error)\n            window.alert('Error saving or unsaving this post.')\n        }\n    }\n\n    // render text inside the save photo button\n    const dynamicSaveButtonText = () => {\n        if (user.savedPhotos === undefined){\n            console.log('no savedPhotos')\n            return 'Save Photo'\n        }\n        const photoUrls = user.savedPhotos.map((photo) => photo.url)\n        if (photoUrls.includes(bookmark.redditPost.url)) {\n            return 'Unsave Photo'\n        } else {\n            return 'Save Photo'\n        }\n    }\n\n    return (\n        <div>\n            <Card className={'bookmark_card_class_selector'}>\n                <CardActionArea component='a' href={bookmark.url} target='_blank'>\n                    <CardMedia\n                        style={{height: '200px'}}\n                        image={bookmark.redditPost.url}\n                        title={bookmark.redditPost.title}\n                    />\n                </CardActionArea>\n                <CardContent>\n                    <Typography variant='h6'>\n                        {bookmark.name}\n                    </Typography>\n                    <Typography variant='subtitle2'\n                    gutterBottom\n                    >\n                        \n                        <Link \n                            underline=\"none\"\n                            component=\"button\"\n                            color=\"primary\"\n                            onClick={() => dispatch(setCategory(bookmark.category))}\n                            variant='inherit'>\n                            {bookmark.category}\n                        </Link>\n                    </Typography>\n                    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                        <Typography variant='body2'>\n                            {bookmark.notes}\n                        </Typography>\n                    </Collapse>\n                </CardContent>\n                <CardActions \n                    disableSpacing\n                >\n                    { bookmark.notes && \n                        <Tooltip title=\"Show notes\">\n                            <IconButton \n                                onClick={handleExpandClick}\n                                aria-label=\"Notes\"\n                                className={clsx(classes.expand, {\n                                    [classes.expandOpen]: expanded,\n                                  })}\n                            >\n                                <KeyboardArrowDownIcon\n                                    fontSize=\"small\"\n                                />\n                            </IconButton>\n                        </Tooltip>\n                    }\n                    <IconButton \n                        onClick={handleClick}\n                        style={{marginLeft: 'auto'}}\n                        aria-label=\"Menu\"\n                        className=\"bookmark_menu_class_selector\"\n                        >\n                        <MoreVertIcon\n                            fontSize='small'\n                        />\n                    </IconButton>\n                    <Tooltip title={bookmark.redditPost.title}>\n                        <IconButton \n                            aria-label=\"Info\">\n                            <InfoIcon\n                                fontSize=\"small\"\n                            />\n                        </IconButton>\n                    </Tooltip>\n                    <FavoriteButton \n                        bookmark={bookmark}\n                    />\n                </CardActions>\n            </Card>\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                <MenuItem onClick={() => dispatch(openEditBookmark(bookmark))}>Edit Bookmark</MenuItem>\n                <MenuItem onClick={() => dispatch(openConfirmDelete(bookmark))} color=\"secondary\">Delete Bookmark</MenuItem>\n                <Divider />\n                <MenuItem onClick={() => handleSave()}>{dynamicSaveButtonText()}</MenuItem>\n            </Menu>\n\n        </div>\n    )\n}\n\nexport default BookmarkCard","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\n// reducers\nimport { closeConfirmDelete } from '../reducers/confirmDeleteReducer'\nimport { deleteBookmark } from '../reducers/bookmarksReducer'\n\n// components\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nconst ConfirmDeleteDialogue = () => {\n  const dispatch = useDispatch()\n\n  // get state from redux\n  const bookmark = useSelector(state => state.confirmDelete.bookmark)\n  const openStatus = useSelector(state => state.confirmDelete.openStatus)\n\n  const handleDelete = async (event) => {\n    event.preventDefault()\n    dispatch(deleteBookmark(bookmark))\n    dispatch(closeConfirmDelete())\n  }\n\n  return (\n    <div>\n      <Dialog open={openStatus} onClose={() => dispatch(closeConfirmDelete())} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">{bookmark.name}</DialogTitle>\n          <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Are you sure you want to perminently delete this bookmark from your collection?\n          </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button\n              onClick={() => dispatch(closeConfirmDelete())} \n            >\n              Cancel\n            </Button>\n            <Button \n              className=\"confirm_delete_class_selector\"\n              onClick={handleDelete} \n              color=\"secondary\">\n              Delete\n            </Button>\n          </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nexport default ConfirmDeleteDialogue","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\n// reducers\nimport { closeEditBookmark } from '../reducers/editBookmarkReducer'\nimport { editBookmark } from '../reducers/bookmarksReducer'\n\n// components\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport TextField from '@material-ui/core/TextField'\n\nconst EditBookmarkDialogue = () => {\n  const dispatch = useDispatch()\n\n  // get state from redux\n  // get state from redux\n  const categorization = useSelector(state => state.categorization)\n  const bookmark = useSelector(state => state.editBookmarkDialogue.bookmark)\n  const openStatus = useSelector(state => state.editBookmarkDialogue.openStatus)\n\n  \n  const handleSubmit = async (event) => {\n    event.preventDefault()\n    const adjustedBookmark = {\n      name: document.getElementById('edit_name').value,\n      url: document.getElementById('edit_url').value,\n      category: document.getElementById('edit_category').value,\n      notes: document.getElementById('edit_notes').value\n    }\n    dispatch(editBookmark(bookmark.redditPost, bookmark._id, adjustedBookmark))\n    dispatch(closeEditBookmark())\n\n  }\n\n  return (\n    <div>\n      <Dialog open={openStatus} onClose={() => dispatch(closeEditBookmark())} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Edit Bookmark</DialogTitle>\n          <form onSubmit={handleSubmit}>\n            <DialogContent>\n              <TextField\n                defaultValue={bookmark.name}\n                id=\"edit_name\"\n                label=\"Name\"\n                type=\"text\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoFocus\n                required\n                fullWidth\n              />\n              <TextField\n                defaultValue={bookmark.url}\n                id=\"edit_url\"\n                label=\"URL\"\n                type=\"url\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                required\n                fullWidth\n              />\n              <Autocomplete\n                defaultValue={bookmark.category}\n                id=\"edit_category\"\n                options={categorization.map(category => category)}\n                freeSolo\n                renderInput={(params) => (\n                  <TextField\n                    {...params} \n                    label=\"Category\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    required\n                  />\n                )}\n                />\n                <TextField\n                  id=\"edit_notes\"\n                  label=\"Notes\"\n                  type=\"text\"\n                  rows={5}\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  fullWidth\n                  multiline\n                />\n            </DialogContent>\n            <DialogActions>\n              <Button\n                onClick={() => dispatch(closeEditBookmark())} \n              >\n                Cancel\n              </Button>\n              <Button \n                onClick={handleSubmit} \n                type=\"submit\"\n                color=\"primary\"\n              >\n                Save\n              </Button>\n            </DialogActions>\n          </form>\n      </Dialog>\n    </div>\n  )\n}\n\nexport default EditBookmarkDialogue","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\n\n// reducers\nimport { openAddBookmark } from '../reducers/addBookmarkReducer'\n\n// components\nimport AddBookmarkDialogue from './AddBookmarkDialogue'\nimport AddIcon from '@material-ui/icons/Add'\nimport BookmarkCard from '../components/BookmarkCard'\nimport Box from '@material-ui/core/Box'\nimport ConfirmDeleteDialogue from './ConfirmDeleteDialogue'\nimport Container from '@material-ui/core/Container'\nimport EditBookmarkDialogue from '../components/EditBookmarkDialogue'\nimport Fab from '@material-ui/core/Fab'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\nconst useStyles = makeStyles((theme) => ({\n  customCard: {\n    borderLeft: '5px solid #cdcdcd',\n    transition: '.2s',\n    '&:hover': {\n      borderLeft: '5px solid #0c5299'\n    }\n  },\n  categoryIcon: {\n      marginLeft: 'auto'\n  },\n  fab: {\n    position: 'fixed',\n    bottom: theme.spacing(4),\n    right: theme.spacing(4),\n  },\n  emptyText: {\n    marginTop: '40vh',\n    textAlign: 'center'\n  }\n}))\n\nconst Bookmarks = () => {\n  const dispatch = useDispatch()\n  const classes = useStyles()\n  const bookmarks = useSelector(store => store.bookmarks)\n  const category = useSelector(store => store.category)\n\n  // filter bookmarks based on category\n  const filtered = category === 'All' ? bookmarks : bookmarks.filter(bookmark => bookmark.category === category)\n\n  if (bookmarks.length === 0) {\n    return(\n      <div>\n        <div className={classes.emptyText}>\n          <Typography variant='h6'>\n            Nothing here yet!\n          </Typography>\n          <Typography variant='subtitle1'>\n            Add some bookmarks to get started\n          </Typography>\n        </div>\n        <Fab\n          color='primary'\n          size='large'\n          className={classes.fab}\n          onClick={() => dispatch(openAddBookmark())}\n          >\n            <AddIcon \n              fontSize='large'\n            />\n        </Fab>\n        <AddBookmarkDialogue />\n      </div>\n    )\n  }\n\n  return(\n    <div>\n      <Container className={classes.adjustedMargins}>\n        <Box m={2}>\n          <Typography variant={'h6'}>\n            {category}\n          </Typography>\n        </Box>\n        <Grid container spacing={2}>\n          {filtered.map(bookmark => \n            <Grid key={bookmark._id} item xs={12} sm={4} md={3}>\n              <BookmarkCard\n                bookmark={bookmark}\n              />\n            </Grid>\n          )}\n        </Grid>\n        <Fab\n          id='add_bookmark_fab' \n          color='primary'\n          size='large'\n          className={classes.fab}\n          onClick={() => dispatch(openAddBookmark())}\n          >\n            <AddIcon\n              fontSize='large'\n            />\n        </Fab>\n        <AddBookmarkDialogue />\n        <ConfirmDeleteDialogue />\n        <EditBookmarkDialogue />\n      </Container>\n    </div>\n  )\n}\n\nexport default Bookmarks","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  adjustedMarginBottom: {\n    marginBottom: '50px'\n  }\n}))\n\nexport default useStyles","import React from 'react';\nimport { useSelector } from 'react-redux'\nimport useStyles from '../styles/Favorites'\n\n// components\nimport BookmarkCard from '../components/BookmarkCard'\nimport Box from '@material-ui/core/Box'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\n\nconst Favorites = () => {\n\n  const classes = useStyles()\n  const favorites = useSelector(store => store.favorites)\n\n  if (favorites.length === 0 ){\n    return null\n  }\n\n  return(\n    <div>\n      <Container className={classes.adjustedMarginBottom}>\n          <Box m={2}>\n            <Typography variant={'h6'}>\n              Pinned\n            </Typography>\n          </Box>\n          <Grid container spacing={2}>\n            {favorites.map(bookmark => \n              <Grid key={bookmark._id} item xs={12} sm={4} md={3}>\n                <BookmarkCard\n                  bookmark={bookmark}\n                />\n              </Grid>\n            )}\n          </Grid>\n        </Container>\n    </div>\n  )\n}\n\nexport default Favorites","import { makeStyles } from '@material-ui/core/styles'\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  }\n}))\n\nexport default useStyles\n","export const changeDrawerStatus = (status) => {\n  return async dispatch => {\n    dispatch({\n      type: 'CHANGE_STATUS',\n      data: status\n    })\n  }\n}\n\nconst drawerReducer = (state = true, action) => {\n  switch (action.type) { \n  \n  case 'CHANGE_STATUS':\n    return action.data\n\n  case 'INIT_DRAWER':\n    return state // change when implemented\n\n  default:\n    return state\n  }\n}\n\nexport default drawerReducer","// reducer that manages the status of the dialogue modal with\n// the settings menu\n\n\nexport const toggleSettingsMenu = (bookmark) => {\n  return async dispatch => {\n    dispatch({\n      type: \"SWITCH_SETTINGS_MENU_STATUS\"\n    })\n  }\n}\n\nconst settingsReducer = (state = false, action) => {\n    switch (action.type) {  \n\n      case \"SWITCH_SETTINGS_MENU_STATUS\":\n        return !state\n  \n      default:\n        return state\n    }\n  }\n  \nexport default settingsReducer","// reducer that manages the status of the dialogue modal with\n// the users saved bookmarks\nexport const toggleSavedPhotos = () => {\n  return async dispatch => {\n    dispatch({\n      type: \"SWITCH_SAVED_PHOTOS_DIALOGUE_STATUS\"\n    })\n  }\n}\n\nconst savedPhotosReducer = (state = false, action) => {\n    switch (action.type) {  \n\n      case \"SWITCH_SAVED_PHOTOS_DIALOGUE_STATUS\":\n        return !state\n\n      default:\n        return state\n    }\n  }\n  \nexport default savedPhotosReducer","import React from 'react'\nimport { useDispatch } from 'react-redux'\n\n// reducers\nimport { addOrRemoveSavedPhoto } from '../reducers/userReducer'\n\n// components\nimport Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Typography from '@material-ui/core/Typography'\n\nconst SavedPhotoCard = ({photo}) => {\n\n  const dispatch = useDispatch()\n\n  // handle save/unsave photo\n  const handleSave = async () => {\n    const savedPhoto = {\n        url: photo.url,\n        name: photo.title\n    }\n\n    try {\n      dispatch(addOrRemoveSavedPhoto(savedPhoto))\n    } catch (error){\n        console.log(error)\n        window.alert('Error saving or unsaving this post.')\n    }\n  }\n\n\n  return(\n    <div>\n      <Card>\n        < CardMedia\n          style={{height: '500px'}}\n          image={photo.url}\n          title={photo.name}\n        />\n        <CardContent>\n          <Typography variant={'subtitle2'}>\n            {photo.name}\n          </Typography>\n        </CardContent>\n        <CardActions >\n          <Button\n            onClick={() => handleSave()}\n            style={{marginLeft: 'auto'}}\n            size=\"small\"\n          >\n            Unsave\n          </Button>\n          <Button\n            size=\"small\"\n            color=\"primary\"\n            href={photo.url}\n            target='blank'\n          >\n            Full Size\n          </Button>\n        </CardActions>\n      </Card>\n    </div>\n  )\n}\n\nexport default SavedPhotoCard","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\n// reducers\nimport { toggleSavedPhotos } from '../reducers/savedPhotosReducer'\n\n// components\nimport Box from '@material-ui/core/Box'\nimport Button from '@material-ui/core/Button'\nimport Container from '@material-ui/core/Container'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Grid from '@material-ui/core/Grid'\nimport SavedPhotoCard from './SavedPhotoCard'\nimport { Typography } from '@material-ui/core'\n\nconst SavedBookmarksDialogue = () => {\n  const dispatch = useDispatch()\n\n  // get state from redux\n  const openStatus = useSelector(state => state.savedPhotosDialogueStatus)\n  const user = useSelector(state => state.user)\n\n\n  return (\n    <div >\n      <Dialog \n        open={openStatus} onClose={() => dispatch(toggleSavedPhotos())} \n        aria-labelledby=\"form-dialog-title\"\n        fullWidth={true}\n      >\n        <DialogTitle id=\"form-dialog-title\">Saved Photos</DialogTitle>\n        <Container>\n          {user.savedPhotos.length === 0 &&\n            <Typography variant={'subtitle1'}>\n              No photos have been saved yet. \n            </Typography>\n          }\n          <Grid container spacing={2}>\n              {user.savedPhotos.map(photo => \n                <Grid key={photo.url} item xs={12}>\n                  <Box>\n                    <SavedPhotoCard\n                      photo={photo}\n                    />\n                  </Box>\n                </Grid>\n              )}\n          </Grid>\n        </Container>\n        <DialogActions>\n          <Button\n            onClick={() => dispatch(toggleSavedPhotos())} \n          >\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nexport default SavedBookmarksDialogue","const axios = require('axios')\n\nexport const checkSubreddit = async (subreddit) => {\n  // function that checks the first 10 posts of a subreddit. If there aren't 4 photos then it returns false.\n  let successful = 0\n\n  const limit = 10\n  const successRate = 4\n\n  // make an initial call\n  const response = await axios.get(`https://www.reddit.com/r/${subreddit}/new.json?limit=${limit}`)\n  const posts = response.data.data.children\n\n  posts.forEach(post => {\n    if (post.data.post_hint === 'image') {\n      successful++\n    }\n  })\n  \n  if (successful >= successRate){\n    return true\n  }\n\n  return false\n}","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { checkSubreddit } from '../utils/subredditChecker'\n\n// reducers\nimport { toggleSettingsMenu } from '../reducers/settingsReducer'\nimport { updateUserSettings } from '../reducers/userReducer'\nimport { initializeBookmarks } from '../reducers/bookmarksReducer'\n\n// components\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport FormControl from '@material-ui/core/FormControl'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Select from '@material-ui/core/Select'\nimport TextField from '@material-ui/core/TextField'\n\nconst SettingsDialogue = () => {\n  const dispatch = useDispatch()\n\n  // get state from redux\n  const openStatus = useSelector(state => state.settings)\n  const user = useSelector(state => state.user)\n\n  // local state for theme selector\n  const [theme, setTheme] = React.useState(user.prefersDark);\n\n  const handleChange = (event) => {\n    setTheme(event.target.value);\n  };\n  \n  const handleSubmit = async (event) => {\n    event.preventDefault()\n    const subreddit = document.getElementById('edit_subreddit').value\n\n    // run a browser side check to be sure subreddit is valid\n    try {\n      const subredditApproved = await checkSubreddit(subreddit)\n      console.log(subredditApproved)\n  \n      if (subredditApproved) {\n        const updatedSettings = {\n          subreddit: subreddit,\n          prefersDark: theme\n        }\n        \n        dispatch(toggleSettingsMenu())\n        await dispatch(updateUserSettings(updatedSettings))\n        await dispatch(initializeBookmarks())\n  \n      } else {\n        window.alert(\"Subreddit does not contain enough photos. Please choose another.\")\n      }\n    } catch (error) {\n      window.alert(\"Subreddit not found. Please choose another.\")\n    }\n  }\n\n  return (\n    <div>\n      <Dialog open={openStatus} onClose={() => dispatch(toggleSettingsMenu())} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Settings</DialogTitle>\n          <form onSubmit={handleSubmit}>\n            <DialogContent>\n              <DialogContentText>\n                Logged in as <b>{user.username}</b>\n              </DialogContentText>\n              <TextField\n                defaultValue={user.subreddit}\n                id=\"edit_subreddit\"\n                label=\"Subreddit\"\n                type=\"text\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                InputProps={{\n                  startAdornment: <InputAdornment position=\"start\">r/</InputAdornment>,\n                }}\n              />\n              <FormControl \n                margin=\"normal\" \n                variant=\"outlined\" \n                fullWidth\n              >\n                <InputLabel id=\"theme\">Theme</InputLabel>\n                <Select\n                  id=\"theme_selector\"\n                  defaultValue={user.prefersDark ? \"Light\" : \"Dark\"}\n                  labelId=\"theme\"\n                  label=\"Theme\"\n                  \n                  value={theme}\n                  onChange={handleChange}\n                >\n                  <MenuItem value={false}>Light</MenuItem>\n                  <MenuItem value={true}>Dark</MenuItem>\n                </Select>\n              </FormControl>\n            </DialogContent>\n            <DialogActions>\n              <Button\n                onClick={() => dispatch(toggleSettingsMenu())} \n              >\n                Cancel\n              </Button>\n              <Button \n                onClick={handleSubmit} \n                type=\"submit\"\n                color=\"primary\"\n              >\n                Save\n              </Button>\n            </DialogActions>\n          </form>\n      </Dialog>\n    </div>\n  )\n}\n\nexport default SettingsDialogue","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useStyles from '../styles/LeftDrawer'\nimport clsx from 'clsx'\n\n// reducers\nimport { changeDrawerStatus } from '../reducers/drawerReducer'\nimport { setCategory } from '../reducers/categoryReducer'\nimport { clearFavorites } from '../reducers/favoritesReducer'\nimport { toggleSettingsMenu } from '../reducers/settingsReducer'\nimport { toggleSavedPhotos } from '../reducers/savedPhotosReducer'\n\n// components\nimport BookmarksIcon from '@material-ui/icons/Bookmarks'\nimport CameraAltIcon from '@material-ui/icons/CameraAlt'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Divider from '@material-ui/core/Divider'\nimport Drawer from '@material-ui/core/Drawer'\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'\nimport FolderIcon from '@material-ui/icons/Folder'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport IconButton from '@material-ui/core/IconButton'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport SavedBookmarksDialogue from './SavedPhotosDialogue'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport SettingsDialogue from '../components/SettingsDialogue'\n\nconst LeftDrawer = () => {\n\n  const classes = useStyles()\n  const categories = useSelector(state => state.categorization)\n  const drawerOpen = useSelector(state => state.drawer)\n  const favorites = useSelector(state => state.favorites)\n  const dispatch = useDispatch()\n\n  const categoriesAlphaOrdered = categories.sort((a, b) => \n      a.toLowerCase() > b.toLowerCase() ? 1 : -1)\n\n  const handleLogout = () => {\n    console.log('You are now logged out.')\n    window.localStorage.removeItem('loggedBookmarksUser')\n    dispatch({\n      type: 'SET_USER',\n      data: null\n    })\n  }\n\n  return(\n    <div>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={drawerOpen}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={() => dispatch(changeDrawerStatus(!drawerOpen))}\n            className={clsx(classes.menuButton, drawerOpen && classes.hide)}\n            >\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <ListItem\n            button\n            onClick={() => dispatch(setCategory('All'))}\n          >\n              <ListItemIcon>\n                <BookmarksIcon />\n              </ListItemIcon>\n            <ListItemText primary={'All'} />\n          </ListItem>\n          {categoriesAlphaOrdered.map((category) => (\n            <ListItem\n              button\n              key={category}\n              onClick={() => dispatch(setCategory(category))}\n            >\n              <ListItemIcon>\n                <FolderIcon fontSize=\"small\" />\n              </ListItemIcon>\n              <ListItemText primary={category}/>\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          <ListItem\n            button\n            onClick={() => dispatch(clearFavorites(favorites))}\n          >\n              <ListItemIcon>\n                <DeleteIcon />\n              </ListItemIcon>\n            <ListItemText primary={'Clear Pinned'} />\n          </ListItem>\n\n          <ListItem\n            button\n            onClick={() => dispatch(toggleSavedPhotos())}\n          >\n              <ListItemIcon>\n                <CameraAltIcon />\n              </ListItemIcon>\n            <ListItemText primary={'Saved Photos'} />\n          </ListItem>\n\n          <ListItem\n            button\n            onClick={() => dispatch(toggleSettingsMenu())}\n          >\n              <ListItemIcon>\n                <SettingsIcon />\n              </ListItemIcon>\n            <ListItemText primary={'Settings'} />\n          </ListItem>\n\n          <ListItem\n            button\n            onClick={handleLogout}\n          >\n              <ListItemIcon>\n                <ExitToAppIcon />\n              </ListItemIcon>\n            <ListItemText primary={'Logout'} />\n          </ListItem>\n        </List>\n      </Drawer>\n      <SettingsDialogue />\n      <SavedBookmarksDialogue />\n    </div>\n  )\n}\n\nexport default LeftDrawer","import { fade, makeStyles } from '@material-ui/core/styles'\n// ?? for some reason within core imported the input styling is defective\nimport '@material-ui/core' \n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  customNavBar: {\n    background: '#262626'\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  search: {\n    position: 'fixed',\n    right: '20px',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('xs')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  },\n}))\n\nexport default useStyles","export const setSearchFilter = (input) => {\n  return async dispatch => {\n    dispatch({\n      type: 'SET_SEARCH_FILTER',\n      data: input\n    })\n  }\n}\n\nconst searchReducer = (state = '', action) => {\n  switch (action.type) { \n    \n    case 'SET_SEARCH_FILTER':\n      return action.data\n\n    default:\n      return state\n  }\n}\n\nexport default searchReducer","import React from 'react'\nimport useStyles from '../styles/Navbar'\nimport { useDispatch, useSelector } from 'react-redux'\nimport clsx from 'clsx';\n\n// reducers\nimport { changeDrawerStatus } from '../reducers/drawerReducer'\nimport { setSearchFilter } from '../reducers/searchReducer'\n\n// components\nimport AppBar from '@material-ui/core/AppBar'\nimport IconButton from '@material-ui/core/IconButton'\nimport InputBase from '@material-ui/core/InputBase'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport SearchIcon from '@material-ui/icons/Search'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\n\nconst Navbar = () => {\n\n  const classes = useStyles()\n  const drawerOpen = useSelector(state => state.drawer)\n  const dispatch = useDispatch()\n\n  return(\n    <div className={classes.root}>\n      <AppBar\n        position='fixed'\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: drawerOpen,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          edge=\"start\"\n          onClick={() => dispatch(changeDrawerStatus(!drawerOpen))}\n          className={clsx(classes.menuButton, drawerOpen && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h4\" className={classes.navBarTitle}>\n            Bookmarks\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              autoFocus\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n              onChange={(event) => dispatch(setSearchFilter(event.target.value))}\n            />\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  )\n}\n\nexport default Navbar","import React from 'react';\nimport { useSelector } from 'react-redux'\n\n// components\nimport BookmarkCard from '../components/BookmarkCard'\nimport Box from '@material-ui/core/Box'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\n\nconst SearchResults = () => {\n\n  const bookmarks = useSelector(store => store.bookmarks)\n  const searchTerm = useSelector(store => store.search)\n\n  let filtered\n\n  if(searchTerm.length === 0){\n    return null\n  } else {\n    filtered = bookmarks.filter(bookmark => bookmark.name.toLowerCase().includes(searchTerm.toLowerCase()))\n    console.log(filtered)\n  }\n\n  return(\n    <div>\n      <Container>\n          <Box m={2}>\n            <Typography variant={'h6'}>\n              Search Results\n            </Typography>\n          </Box>\n          <Grid container spacing={2}>\n            {filtered.map(bookmark => \n              <Grid key={bookmark._id} item xs={12} sm={4} md={3}>\n                <BookmarkCard\n                  bookmark={bookmark}\n                />\n              </Grid>\n            )}\n          </Grid>\n        </Container>\n    </div>\n  )\n}\n\nexport default SearchResults","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport useStyles from '../styles/App'\nimport clsx from 'clsx'\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\n\n// reducers\nimport { initializeBookmarks } from '../reducers/bookmarksReducer'\nimport { initializeUser } from '../reducers/userReducer'\n\n// components\nimport Bookmarks from '../components/Bookmarks'\nimport Favorites from '../components/Favorites'\nimport LeftDrawer from '../components/LeftDrawer'\nimport Navbar from '../components/Navbar'\nimport SearchResults from '../components/SearchResults'\n\n\nconst Authenticated = () => {\n  \n  const classes = useStyles()\n  const drawerOpen = useSelector(state => state.drawer)\n  const searchTerm = useSelector(state => state.search)\n  const user = useSelector(state => state.user)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(initializeBookmarks()) // favorites and categorites initialized within bookmarks reducer\n    // eslint-disable-next-line\n  }, [])\n\n  // manage dark mode\n  let darkSetting = false\n\n  if (user) {\n    darkSetting = user.prefersDark\n  }\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: darkSetting ? 'dark' : 'light',\n        },\n      }),\n    [darkSetting],\n  );\n  \n  return(\n    <div>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n          <Navbar />\n          <LeftDrawer />\n          <main\n            className={`${clsx(classes.content, {\n              [classes.contentShift]: drawerOpen,\n            })} ${classes.topMarginForNavbar}`}\n          >\n            { searchTerm && <SearchResults />}\n            { !searchTerm && <div><Favorites /><Bookmarks /></div> }\n          </main>\n      </ThemeProvider>\n    </div>\n  )\n}\n\nexport default Authenticated","// name of file should be renamed to indicate that it also holds the call to register new users\n\nimport axios from 'axios'\nconst baseUrl = ''\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl + '/api/login', credentials)\n  return response.data\n}\n\nconst register = async (newUser) => {\n  const response = await axios.post(baseUrl + '/api/users', newUser)\n  return response.data\n}\n\nexport default { login, register }","// this component toggles between the login and register forms\n\nimport React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\n\n// services\nimport loginService from '../services/login'\nimport { initializeUser } from '../reducers/userReducer'\n\n// components\nimport Box from '@material-ui/core/Box'\nimport Button from '@material-ui/core/Button'\nimport Container from '@material-ui/core/Container'\nimport Divider from '@material-ui/core/Divider'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport { Typography } from '@material-ui/core'\n\nconst prettyBackground = [\n  \"https://i.imgur.com/4DA9jxT.jpg\",\n  \"https://i.redd.it/ggchwfr82q971.jpg\",\n  \"https://i.redd.it/g8w1nuzbon971.jpg\",\n  \"https://i.redd.it/jjq20pvhun971.jpg\"\n]\n\nconst randomElement = prettyBackground[Math.floor(Math.random() * prettyBackground.length)]\n\nconst useStyles = makeStyles((theme) => ({\n  pageRightContainer: {\n    position: 'absolute',\n    right: '0px',\n    height: '100vh',\n    width: '400px',\n    background: 'white'\n  },\n  pageLeftContainer: {\n    position: 'absolute',\n    right: '400px',\n    height: '100vh',\n    width: '100%',\n    background:  `url(${randomElement})`,\n    backgroundPosition: 'center',\n    backgroundSize: 'cover'\n\n  }\n}))\n\nconst Login = () => {\n\n  const classes = useStyles()\n\n  // local states for forms\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [registerUsername, setRegisterUsername] = useState('')\n  const [registerPassword, setRegisterPassword] = useState('')\n  const [registerConfirmPassword, setRegisterConfirmPassword] = useState('')\n\n  // local states to show visibility of forms\n  const [loginDisplay, setLoginDisplay] = useState('block')\n  const [registerDisplay, setRegisterDisplay] = useState('none')\n\n  const dispatch = useDispatch()\n\n  const toggleForms = () => {\n    if (loginDisplay === 'block') {\n      setLoginDisplay('none')\n      setRegisterDisplay('block')\n    }\n\n    if (loginDisplay === 'none') {\n      setLoginDisplay('block')\n      setRegisterDisplay('none')\n    }\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    try {\n      // log user in\n      console.log(username, password)\n      const user = await loginService.login({username: username, password: password})\n     \n      // save user info (username and token) to local storage\n      window.localStorage.setItem(\n        'loggedBookmarksUser', JSON.stringify(user)\n      )\n      // call dispatch\n      dispatch(initializeUser())\n\n      // clear local state for forms\n      setUsername('')\n      setPassword('')\n    } catch (error) {\n      window.alert(error)\n    }\n  }\n\n  const handleRegister = async (event) => {\n    event.preventDefault()\n\n    if (registerPassword !== registerConfirmPassword) {\n      window.alert('Passwords do not match.')\n      return null\n    } \n\n    const newUser = {\n      username: registerUsername,\n      password: registerPassword\n    }\n\n    try {\n      // register user\n      const postedNewUser = await loginService.register(newUser)\n      console.log(postedNewUser)\n      \n      // log user in\n      const user = await loginService.login({\n        username: newUser.username,\n         password: newUser.password\n        })\n     \n      // save user info (username and token) to local storage\n      window.localStorage.setItem(\n        'loggedBookmarksUser', JSON.stringify(user)\n      )\n      // call dispatch\n      dispatch(initializeUser())\n\n      // reset states\n      toggleForms()\n      setUsername('')\n      setPassword('')\n      setRegisterUsername('')\n      setRegisterPassword('')\n      setRegisterConfirmPassword('')\n\n    } catch (error) {\n      window.alert(error)\n    }\n  }\n\n  return(\n    <div >\n      <div className={classes.pageLeftContainer}>\n      </div>\n      <div className={classes.pageRightContainer}>\n        <Container>\n          <Box my={5}>\n            <Typography variant={'h3'} color={'primary'}>\n              Bookmarks\n            </Typography>\n            <Typography variant={'subtitle1'}>\n              With pretty pictures from your favorite subreddits\n            </Typography>\n          </Box>\n          <br/>\n          <Box display={loginDisplay} mt={5} mb={2}>\n            <Typography variant={'h5'}>\n              <b>Log in to your account</b>\n            </Typography>\n            <br/>\n            <form onSubmit={handleLogin}>\n              <TextField\n                label={'Username'}\n                id={'username'}\n                type={'text'}\n                value={username}\n                name={'username'}\n                margin={'dense'}\n                variant={'outlined'}\n                fullWidth\n                required\n                onChange={({ target }) => setUsername(target.value)}\n              />\n              <TextField \n                label={'Password'}\n                id={'password'}\n                type={'password'}\n                value={password}\n                name={'password'}\n                margin={'dense'}\n                variant={'outlined'}\n                fullWidth\n                required\n                onChange = {({ target }) => setPassword(target.value)}\n              />\n              <Box m={1}></Box>\n              <Button\n                id='login-button'\n                color='primary'\n                type='submit'\n                margin={'dense'}\n                variant={'contained'}\n                fullWidth\n              >\n                Login\n              </Button>\n            </form>\n          </Box>\n          <Box display={registerDisplay} mt={5} mb={2}>\n            <Typography variant={'h5'}>\n              <b>Create an account</b>\n            </Typography>\n            <br/>\n            <form onSubmit={handleRegister}>\n              <TextField\n                label={'Username'}\n                id={'register_username'}\n                type={'text'}\n                value={registerUsername}\n                name={'register_username'}\n                margin={'dense'}\n                variant={'outlined'}\n                fullWidth\n                required\n                onChange={({ target }) => setRegisterUsername(target.value)}\n              />\n              <TextField \n                label={'Password'}\n                id={'register_password'}\n                type={'password'}\n                value={registerPassword}\n                name={'register_password'}\n                margin={'dense'}\n                variant={'outlined'}\n                fullWidth\n                required\n                onChange = {({ target }) => setRegisterPassword(target.value)}\n              />\n              <TextField \n                label={'Confirm password'}\n                id={'confirm_password'}\n                type={'password'}\n                value={registerConfirmPassword}\n                name={'password'}\n                margin={'dense'}\n                variant={'outlined'}\n                fullWidth\n                required\n                onChange = {({ target }) => setRegisterConfirmPassword(target.value)}\n              />\n              <Box m={1}></Box>\n              <Button\n                id='login-button'\n                color='primary'\n                type='submit'\n                margin={'dense'}\n                variant={'contained'}\n                fullWidth\n              >\n                Register\n              </Button>\n            </form>\n\n          </Box>\n          <Divider />\n          <Box mt={2}>\n            <Button\n              onClick={() => toggleForms()}\n              id='sign-up-button'\n              variant={'contained'}\n              fullWidth\n            >\n              {\n                loginDisplay === 'block' && 'Create an Account'\n              }\n              {\n                loginDisplay === 'none' && 'Cancel'\n              }\n\n              \n            </Button>\n          </Box>\n        </Container>\n      </div>\n    </div>\n  )\n}\n\nexport default Login","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport useStyles from './styles/App'\nimport clsx from 'clsx'\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\n\n// reducers\nimport { initializeBookmarks } from './reducers/bookmarksReducer'\nimport { initializeUser } from './reducers/userReducer'\n\n// components\nimport Authenticated from './components/Authenticated'\nimport Login from './components/Login'\n\n\nfunction App() {\n  \n  const user = useSelector(state => state.user)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(initializeUser())\n    // eslint-disable-next-line\n  }, [])\n\n\n  // TODO: When the page reload the login form flashes. Needs to be fixed.\n  if (!user) {\n    return(\n      <div>\n        <Login />\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <Authenticated />\n    </div>\n  )\n}\n\nexport default App;\n","import { combineReducers, createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport bookmarksReducer from './reducers/bookmarksReducer'\nimport favoritesReducer from './reducers/favoritesReducer'\nimport drawerReducer from './reducers/drawerReducer'\nimport categoryReducer from './reducers/categoryReducer'\nimport userReducer from './reducers/userReducer'\nimport searchReducer from './reducers/searchReducer'\nimport categorizationReducer from './reducers/categorizationReducer'\nimport addBookmarkReducer from './reducers/addBookmarkReducer'\nimport confirmDeleteReducer from './reducers/confirmDeleteReducer'\nimport editBookmarkReducer from './reducers/editBookmarkReducer'\nimport settingsReducer from './reducers/settingsReducer'\nimport savedPhotosReducer from './reducers/savedPhotosReducer'\nimport thunk from 'redux-thunk'\n\nconst reducer = combineReducers({\n    bookmarks: bookmarksReducer,\n    favorites: favoritesReducer,\n    drawer: drawerReducer,\n    category: categoryReducer,\n    search: searchReducer,\n    categorization: categorizationReducer,\n    user: userReducer,\n    addBookmarkDialogueStatus: addBookmarkReducer,\n    confirmDelete: confirmDeleteReducer,\n    editBookmarkDialogue: editBookmarkReducer,\n    settings: settingsReducer,\n    savedPhotosDialogueStatus: savedPhotosReducer \n  })\n  \n  const store = createStore(\n    reducer,\n    composeWithDevTools(\n      applyMiddleware(thunk)\n    )\n  )\n  \nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}